---
- hosts: all

  # The target of this scripts is the jumphost server
  # ansible-playbook -i ../myazure_rm.yml setup-prometheus.yml -l tag_environment_management

  vars:
    groupId: prometheus
    userId: prometheus
    version: 2.20.0
    serviceName: prometheus
    user: myadmin
    server_file: "/home/{{user}}/onboardserver/server.txt"
    azure_rm_file: /home/{{user}}/myazure_rm.yml
    tag_monitoring: tag_monitoring_yes
    path_for_playbooks: "/home/{{user}}/prometheus/node_exporter"

  tasks:

  - name: Creating prometheus user group
    group: name="{{groupId}}"
    become: yes

  - name: Creating prometheus user
    user:
     name: "{{userId}}"
     group: "{{groupId}}"
     system: yes
     shell: "/sbin/nologin"
     comment: "{{userId}} nologin User"
     createhome: "no"
     state: present
    become: yes

  - name: Install prometheus
    unarchive:
     src: "https://github.com/prometheus/prometheus/releases/download/v{{ version }}/prometheus-{{ version }}.linux-amd64.tar.gz"
     dest: /tmp/
     remote_src: yes

  - name: Copy prometheus file to bin
    copy:
     src: "/tmp/prometheus-{{ version }}.linux-amd64/prometheus"
     dest: "/usr/local/bin/prometheus"
     owner: "{{userId}}"
     group: "{{groupId}}"
     remote_src: yes
     mode: 0755
    become: yes

  - name: Delete prometheus tmp folder
    file:
     path: '/tmp/prometheus-{{ version }}.linux-amd64'
     state: absent

  - name: Create /etc/prometheus directory
    file:
     path: "/etc/prometheus"
     state: directory
    become: yes

  - name: Create /var/lib/prometheus directory
    file:
     path: "/var/lib/prometheus"
     state: directory
    become: yes

  - name: Create prometheus workspace directory
    file:
     path: "/home/{{user}}/prometheus"
     state: directory

  - name: Copy config file
    copy:
     src: prometheus.yml
     dest: /home/{{user}}/prometheus/prometheus.yml

  - name: Copy script file
    copy:
     src: update_monitored_servers.sh
     dest: /home/{{user}}/prometheus/update_monitored_servers.sh

  - name: Make executable script
    file:
     dest: "/home/{{user}}/prometheus/update_monitored_servers.sh"
     mode: a+x

  - name: Execute script
    command: ./update_monitored_servers.sh {{server_file}}
    args:
     chdir: "/home/{{user}}/prometheus"

  - name: Copy config file
    copy:
     src: /home/{{user}}/prometheus/prometheus-new.yml
     dest: /etc/prometheus/prometheus.yml
     remote_src: yes
    become: yes

  - name: Copy systemd init file
    copy:
     src: init.service
     dest: /lib/systemd/system/prometheus.service
    become: yes

  - name: Start prometheus service
    systemd:
     state: restarted
     daemon_reload: yes
     enabled: yes
     name: prometheus
    become: yes

  - name: Check if prometheus is accessible
    uri:
     url: http://localhost:9090
     method: GET
     status_code: 200

  - name: Copy prometheus-node-exporter to jumphost server
    copy:
     src: ./node_exporter
     dest: "/home/{{user}}/prometheus/"

  - name: Configure node_exporter on monitored servers
    command: ansible-playbook -i {{azure_rm_file}} setup-prometheus-node-exporter.yml -l {{tag_monitoring}}
    args:
     chdir: "{{path_for_playbooks}}"

#  GRAFANA SERVICE ===================================

  # - name: Ensure your Ubuntu / Debian system is up to date
  #   apt:
  #    update_cache: yes
  #   become: yes

  - name: install usefull packages
    apt:
     pkg:
     - gnupg2
     - curl
     - software-properties-common
    become: yes

  - name: Add Grafana gpg key which allows you to install signed packages
    apt_key:
     url: https://packages.grafana.com/gpg.key
     state: present
    become: yes

  - name: install Grafana APT repository
    apt_repository:
     repo: deb https://packages.grafana.com/oss/deb stable main
     state: present
    become: yes

  - name: Install grafana
    apt:
     name: grafana
     update_cache: yes
    become: yes

  - name: Start grafana service
    systemd:
     state: restarted
     daemon_reload: yes
     enabled: yes
     name: grafana-server
    become: yes
