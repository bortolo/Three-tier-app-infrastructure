---
- hosts: all
  vars:
    ssh_key_filename: id_rsa
    host_user: myadmin # Set the host name of your servers (must be aligned with the one of terraform)
    script_name: onboard-servers.sh
    yml_azure_rm_file: myazure_rm.yml # Set the dynamic ansible inventory for azure resources
    deployment_type_web: nodejs
    tag_web: tag_environment_web # TODO it is not possible to change this tag. Update also onboard-servers.sh if you want to use a different tag
    deployment_type_app: tomcat
    tag_app: tag_environment_app # TODO it is not possible to change this tag. Update also onboard-servers.sh if you want to use a different tag
    path_for_artifact_war: "/Users/andreabortolossi/.jenkins/workspace/my-real-app-war/target"
    # CHANGE HERE
    # Set your local path to AZURE credintial file
    path_for_azure_credentials: ./credentials
    #path_for_azure_credentials: /Users/andreabortolossi/Documents/Documents – Andrea’s MacBook Pro/Coding projects/Secrets/credentials
    path_for_playbooks: "/home/{{host_user}}/deployments"
    # 1) Create an ansible vault record for the server password (must be ailgned with the one that you set up in terraform)
    #     ansible-vault encrypt_string --vault-id [path_to_the_file_with_your_password] [your_secure_password]
    # 2) Copy here the encrypted key generated by ansible
    # 3) Run the ansible-playbook command with the option "--vault-id [path_to_the_file_with_your_password]"
    # https://www.golinuxcloud.com/ansible-vault-example-encrypt-string-playbook/#8_Using_ansible_vault_in_playbook
    server_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          37646636623032346535326339376631656138653161313663393463636331653962376235356466
          3536363462643331643930653935663235336233366138660a626636373930633536653733386330
          34646131356531626166343630376164616662653763353666633531353664323835616466333330
          3564326336333831390a393362343265343635633462633937373738316261623935646462363037
          3139

  tasks:
    - name: generate SSH key "{{ssh_key_filename}}"
      openssh_keypair:
        path: "~/.ssh/{{ssh_key_filename}}"
    - name: Install pip dependecies to manage azure-mgmt-resource
      command: pip install azure-mgmt-resource
    - name: Copy deployments to jumphost server
      copy:
        src: ./deployments
        dest: "/home/{{host_user}}"
    - name: Create AZURE directory
      file:
        path: "/home/{{host_user}}/.azure"
        state: directory
    - name: Copy file with AZURE credentials
      copy:
       src: "{{path_for_azure_credentials}}"
       dest: "/home/{{host_user}}/.azure/credentials" #TODO it is not good copy the file in each jumphost server not encrypted
    - name: Create ARTIFACT directory
      file:
        path: "/home/{{host_user}}/artifact"
        state: directory
    - name: Copy .war artifact from local Jenkins workspace to jumphost server
      copy:
        src: "{{path_for_artifact_war}}"
        dest: "/home/{{host_user}}/artifact/"
    - name: Make executable "{{script_name}}"
      file:
        dest: "{{path_for_playbooks}}/{{script_name}}"
        mode: a+x
    - name: Execute "{{script_name}}"
      command: ./{{script_name}} {{server_password}}
      args:
        chdir: "{{path_for_playbooks}}"
    - name: Configure and launch application servers
      command: ansible-playbook -i ./{{yml_azure_rm_file}} ./{{deployment_type_app}}/deploy-local-dev.yml -l {{tag_app}}
      args:
        chdir: "{{path_for_playbooks}}"
    - name: Configure and launch web servers
      command: ansible-playbook -i ./{{yml_azure_rm_file}} ./{{deployment_type_web}}/deploy.yml -l {{tag_web}}
      args:
        chdir: "{{path_for_playbooks}}"
